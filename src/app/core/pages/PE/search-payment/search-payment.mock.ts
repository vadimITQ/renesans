import { ISearchPayment } from './search-payment.types';

export const searchPaymentMock: ISearchPayment[] = [
  {
    appCreationTime: 'appCreationTime',
    plannedDate: 'plannedDate',
    statusCode: 'statusCode',
    type: 'type',
    paymentSubType: 'paymentSubType',
    budgetPaymentSubtype: 'budgetPaymentSubtype',
    paymentMethod: 'paymentMethod',
    amount: 'amount',
    fee: 'fee',
    ownFeeAmount: 'ownFeeAmount',
    creditFeeAmount: 'creditFeeAmount',
    bonusAmount: 'bonusAmount',
    bonusRub: 'bonusRub',
    loyaltyRate: 'loyaltyRate',
    bonusTypeName: 'bonusTypeName',
    bonusMaxPercent: 'bonusMaxPercent',
    paymentId: 'paymentId',
    idPH: 'idPH',
    sourceSystem: 'sourceSystem',
    bankBIC: 'bankBIC',
    serviceName: 'serviceName',
    operatorLegalName: 'operatorLegalName',
    iptID: 'iptID',
    cifID: 'cifID',
    applicationID: 'applicationID',
    statusDescriptionPe: 'statusDescriptionPe',
    parentType: 'parentType',
    chequeNumber: 'chequeNumber',
    linkedChequeNumber: 'linkedChequeNumber',
    linkedChequeId: 'linkedChequeId',
    channelIP: 'channelIP',
    messageToReceiver: 'messageToReceiver',
    sbpTransactionId: 'sbpTransactionId',
    sbpWorkflowType: 'sbpWorkflowType',
    sbpFraudScore: 'sbpFraudScore',
    transactionStatus: 'transactionStatus',
    settlementDate: 'settlementDate',
  },
  {
    appCreationTime: 'appCreationTime2',
    plannedDate: 'plannedDate2',
    statusCode: 'statusCode2',
    type: 'type2',
    paymentSubType: 'paymentSubType2',
    budgetPaymentSubtype: 'budgetPaymentSubtype2',
    paymentMethod: 'paymentMethod2',
    amount: 'amount2',
    fee: 'fee2',
    ownFeeAmount: 'ownFeeAmount2',
    creditFeeAmount: 'creditFeeAmount2',
    bonusAmount: 'bonusAmount2',
    bonusRub: 'bonusRub2',
    loyaltyRate: 'loyaltyRate2',
    bonusTypeName: 'bonusTypeName2',
    bonusMaxPercent: 'bonusMaxPercent2',
    paymentId: 'paymentId2',
    idPH: 'idPH2',
    sourceSystem: 'sourceSystem2',
    bankBIC: 'bankBIC2',
    serviceName: 'serviceName2',
    operatorLegalName: 'operatorLegalName2',
    iptID: 'iptID2',
    cifID: 'cifID2',
    applicationID: 'applicationID2',
    statusDescriptionPe: 'statusDescriptionPe2',
    parentType: 'parentType2',
    chequeNumber: 'chequeNumber2',
    linkedChequeNumber: 'linkedChequeNumber2',
    linkedChequeId: 'linkedChequeId2',
    channelIP: 'channelIP2',
    messageToReceiver: 'messageToReceiver2',
    sbpTransactionId: 'sbpTransactionId2',
    sbpWorkflowType: 'sbpWorkflowType2',
    sbpFraudScore: 'sbpFraudScore2',
    transactionStatus: 'transactionStatus2',
    settlementDate: 'settlementDate2',
  },
  
];
